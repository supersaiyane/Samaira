name: Docs Update & Sync

on:
  push:
    paths:
      - 'docs/**'
      - '.github/workflows/docs-update.yml'
  pull_request:
    paths:
      - 'docs/**'
  workflow_dispatch:

jobs:
  docs-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # ðŸ”¹ 1. Lint Markdown for style
      - name: Lint Markdown
        uses: avto-dev/markdown-lint@v1
        with:
          config: '.markdownlint.json'

      # ðŸ”¹ 2. Validate Mermaid/PlantUML blocks
      - name: Validate Diagrams
        run: |
          if grep -R "```mermaid" docs/; then
            echo "Found Mermaid diagrams â€“ validating..."
            npx @mermaid-js/mermaid-cli -i docs/06-workflow.md -o /tmp/test.svg || exit 1
          fi
          if grep -R "@startuml" docs/; then
            echo "Found PlantUML diagrams â€“ validating..."
            docker run --rm -v $PWD:/workspace plantuml/plantuml -check docs/07-plantuml.md || exit 1
          fi

      # ðŸ”¹ 3. Commit docs updates + changelog
      - name: Commit docs updates
        run: |
          git add docs/
          if git diff --cached --quiet; then
            echo "No changes in docs to commit."
          else
            VERSION="v$(date +'%Y.%m.%d')-docs"
            echo "VERSION=$VERSION" >> $GITHUB_ENV

            # Update CHANGELOG.md
            echo "## $VERSION - $(date +'%Y-%m-%d')" >> tmp_changelog.md
            echo "" >> tmp_changelog.md
            git log -1 --pretty=format:"- %s (%an)" >> tmp_changelog.md
            echo "" >> tmp_changelog.md
            cat CHANGELOG.md >> tmp_changelog.md || true
            mv tmp_changelog.md CHANGELOG.md

            git add CHANGELOG.md
            git commit -m "chore(docs): sync updates ($VERSION)"
            git tag $VERSION
            git push --follow-tags
          fi

      # ðŸ”¹ 4. Sync with GitBook on push
      - name: Trigger GitBook Sync
        if: github.event_name == 'push'
        run: |
          curl -X POST https://api.gitbook.com/v1/spaces/${{ secrets.GITBOOK_SPACE_ID }}/content/sync \
          -H "Authorization: Bearer ${{ secrets.GITBOOK_API_TOKEN }}"

      # ðŸ”¹ 5. Auto-generate GitHub Release Notes
      - name: Create Release
        if: env.VERSION != ''
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: "Docs Update - ${{ env.VERSION }}"
          body: |
            ## ðŸ“˜ Documentation Update
            A new docs version has been published.

            ### Changes since last release:
            $(git log -1 --pretty=format:"%h %s (%an)")

            ðŸš€ Synced with GitBook Space: `${{ secrets.GITBOOK_SPACE_ID }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ðŸ”¹ 6. Preview job for PRs
  docs-preview:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Create GitBook Preview Link
        run: |
          PREVIEW_URL="https://app.gitbook.com/o/${{ secrets.GITBOOK_ORG_ID }}/s/${{ secrets.GITBOOK_SPACE_ID }}/pulls/${{ github.event.pull_request.number }}"
          echo "ðŸ”— GitBook Preview: $PREVIEW_URL" >> $GITHUB_STEP_SUMMARY
