version: "3.9"

services:
  # =========================
  # Database
  # =========================
  db:
    image: postgres:15
    container_name: finops-db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      # Auto-init schema + seed data
      - ./db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./db/init/01_init.sql:/docker-entrypoint-initdb.d/01_init.sql

  # =========================
  # Backend (FastAPI)
  # =========================
  backend:
    build: ./app          # points to your FastAPI app Dockerfile
    container_name: finops-backend
    restart: always
    env_file: .env
    depends_on:
      - db
    ports:
      - "8000:8000"
    command: >
      uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./app:/code/app   # optional: live reload in dev

  # =========================
  # Frontend (React)
  # =========================
  frontend:
    build: ./frontend
    container_name: finops-frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/code/frontend  # optional: hot reload

  # =========================
  # Airflow
  # =========================
  airflow:
    image: apache/airflow:2.7.2
    container_name: finops-airflow
    restart: always
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
    volumes:
      - ./airflow/dags:/opt/airflow/dags   # your custom DAGs
      - ./airflow/logs:/opt/airflow/logs
    ports:
      - "8080:8080"
    depends_on:
      - db

  # =========================
  # Prometheus
  # =========================
  prometheus:
    image: prom/prometheus:v2.49.1
    container_name: finops-prometheus
    restart: always
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    depends_on:
      - backend
      - airflow

  # =========================
  # Grafana
  # =========================
  grafana:
    image: grafana/grafana:10.4.1
    container_name: finops-grafana
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/provisioning/dashboards:/etc/grafana/provisioning/dashboards-providers
    depends_on:
      - prometheus
      - loki


  # =========================
  # Loki
  # =========================
  loki:
    image: grafana/loki:2.9.3
    container_name: finops-loki
    restart: always
    command: -config.file=/etc/loki/local-config.yml
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/local-config.yml

  # =========================
  # Promtail (Log shipper)
  # =========================
  promtail:
    image: grafana/promtail:2.9.3
    container_name: finops-promtail
    restart: always
    volumes:
      - ./monitoring/promtail-config.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

volumes:
  pgdata:
  grafana-data:
